package org.smlabtesting.sim.domain.generic;

import org.smlabtesting.sim.executor.Simulation;

/**
 * Represents a simulation entity object. The class defines the structure of
 * an entity, and the object instances represent an entity instance.
 * 
 * Names of entities should match the conceptual model, but without the
 * prefixes. For example:
 *     Q.RacetrackLine -> RacetrackLine implements Queue
 *     R.LoadUnloadMachine -> LoadUnloadMachine
 *
 * The state handlers are generated by this entity, but not stored in it. 
 * This is handled by Simulation and related classes.
 *
 * All entities are sub-classes of this type.
 *
 * @author Ahmed El-Hajjar
 */
public abstract class Entity {
   
    // Abstract Methods 
    
    /**
     * Implement this method to return instances of state handlers for this 
     * entity type. Return an empty array if the entity in question has no
     * state handler. 
     * 
     * @return An array of StateHandler instances.
     */
    public abstract Handler[] generateHandlers();
   
    /**
     * @return Should return a one liner about some basic information about this 
     *          entity.  
     */
    public abstract String getGlance();
    
    
    // References
    
    // A reference to the current simulation. Set by Simulation.
    protected Simulation simulation = null;
    public Simulation getSimulation() {return simulation;}
    public void setSimulation(Simulation simulation) {this.simulation = simulation;}
}